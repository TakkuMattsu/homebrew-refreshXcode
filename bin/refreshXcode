#!/bin/sh

# =====================================
# variable

DERIVED_DATA_DIR=~/Library/Developer/Xcode/DerivedData
DEVICE_SUPPORT_DIR=~/Library/Developer/Xcode/iOS\ DeviceSupport
ARCHIVE_DIR=~/Library/Developer/Xcode/Archives
DIRS="${DERIVED_DATA_DIR},${DEVICE_SUPPORT_DIR},${ARCHIVE_DIR}"
PROGNAME=$(basename $0)
VERSION="1.7.4"
COLOR_ESC="\e["
COLOR_ESC_END="m"
WHITE_UNDER="${COLOR_ESC}31;;4${COLOR_ESC_END}"
COLOR_GRAY="${COLOR_ESC}30;1${COLOR_ESC_END}"
COLOR_WHITE=${COLOR_ESC}31${COLOR_ESC_END}
COLOR_YELLOW=${COLOR_ESC}33${COLOR_ESC_END}
COLOR_BLUE=${COLOR_ESC}34${COLOR_ESC_END}
COLOR_GREEN=${COLOR_ESC}32${COLOR_ESC_END}
COLOR_PURPLE=${COLOR_ESC}35${COLOR_ESC_END}
COLOR_CYAN=${COLOR_ESC}36${COLOR_ESC_END}
COLOR_OFF=${COLOR_ESC}${COLOR_ESC_END}
IS_CONTAIN_DEVICE_SUPPORT=true
IS_CONTAIN_ARCHIVE=true
IS_CONTAIN_DERIVED_DIR=true
# echo -eを使うと環境に依存するため
# 色を出力する時はこちらを利用
ECHO=printf

# =====================================
# function

# Input fucntion
function readInput()
{
  echo ""
  ${ECHO} "${COLOR_YELLOW}Delete Cache of Xcode. Are you sure ?${COLOR_OFF} (y/n) > "
  read INPUT
  echo ""
  # ,を区切り文字に
  PRE_IFS=$IFS
  IFS=$','
  if [ "$INPUT" == "y" ]; then
    for dir in ${DIRS}
    do
      isExistCacheDirectory ${dir}
      if [ $? -eq -1 ]; then
        continue
      fi
      echo "Delete ${dir} ..."
      rm -rf "${dir}"
    done
  elif [ "$INPUT" == "n" ]; then
    echo "Bye.."
    exit
  else
    echo "Please \"y\" or \"n\""
    readInput
  fi
}

# Check directory function
# 第一引数: ディレクトリ
# 第二引数: 引数にfalseで出力抑制
# (flase以外を指定した時は表示)
function isExistCacheDirectory()
{
  if [ -e "$1" ]; then
    return 0
  else
    if [ "$2" != "false" ]; then
      ${ECHO} "${COLOR_YELLOW}N/A${COLOR_OFF}	$1\n"
    fi
    return -1
  fi
}

# 削除するディレクトリのサイズ表示
function showSize()
{
  # スペースが入るディレクトリ対策
  PRE_IFS=$IFS
  IFS=$','
  local dirs=()
  for dir in ${DIRS}
  do
    isExistCacheDirectory ${dir}
    if [ $? -eq 0 ]; then
      du -sh $dir
    fi
  done
  IFS=$PRE_IFS
}

# トータル削除サイズ表示
function showTotalSize()
{
  # スペースが入るディレクトリ対策
  PRE_IFS=$IFS
  IFS=$','
  local dirs=()
  for dir in ${DIRS}
  do
    isExistCacheDirectory ${dir} "false"
    if [ $? -eq 0 ]; then
      if [ ${#dirs[*]} -eq 0 ]; then
        dirs=${dir}
      else
        dirs+=",${dir}"
      fi
    fi
  done
  if [ ${#dirs[*]} -eq 0 ]; then
    echo "0M"
    return 0
  fi
  local RESULT_LIST=$(du -shc $dirs)
  IFS=$'\n'
  for last in $RESULT_LIST
  do :
  done
  IFS=$PRE_IFS
  echo $last | cut -d" " -f 1
}

# サイズを表示
# 返り値が1の場合は0Mだった時
function showSizeMessage()
{
  local TOTAL=$(showTotalSize)
  echo "============================================================================================"
  showSize
  echo "============================================================================================"
  ${ECHO} "Total : ${COLOR_PURPLE}${TOTAL}${COLOR_OFF} 🗑\n"
  if [ ${TOTAL} == "0M" ]; then
    return 1
  else
    return 0
  fi
}
function usage()
{
  echo "Usage: $PROGNAME [OPTION]"
  echo 
  echo "The default behavior is to delete the following directories."
  ${ECHO} " ${COLOR_CYAN}~/Library/Developer/Xcode/DerivedData${COLOR_OFF}\n"
  ${ECHO} " ${COLOR_CYAN}~/Library/Developer/Xcode/iOS DeviceSupport${COLOR_OFF}\n"
  ${ECHO} " ${COLOR_CYAN}~/Library/Developer/Xcode/Archives${COLOR_OFF}\n"
  echo
  echo "You can also delete them individually by specifying options."
  echo
  echo "e.g."
  echo
  echo "Only ~/Library/Developer/Xcode/DerivedData"
  ${ECHO} "${COLOR_GREEN}$ refreshXcode -D${COLOR_OFF}\n"
  echo
  echo "~/Library/Developer/Xcode/DerivedData and ~/Library/Developer/Xcode/Archives"
  ${ECHO} "${COLOR_GREEN}$ refreshXcode -DA${COLOR_OFF}\n"
  echo
  ## オプション表示
  usage_option
  echo
  exit 0
}

function usage_option()
{
  echo "OPTION"
  ${ECHO} %b "-D		If you add -D option, you will delete ${COLOR_CYAN}~/Library/Developer/Xcode/DerivedData${COLOR_OFF}.\n"
  ${ECHO} %b "-i		If you add -i option, you will delete ${COLOR_CYAN}~/Library/Developer/Xcode/iOS DeviceSupport${COLOR_OFF}.\n"
  ${ECHO} %b "-A		If you add -A option, you will delete ${COLOR_CYAN}~/Library/Developer/Xcode/Archives${COLOR_OFF}.\n"
  echo "-h, --help	show help"
  echo "    --version	show version"
  echo "-n, --dry-run	display the size to be deleted"
}

# =====================================
# main
for OPT in "$@"
do
  case "$OPT" in
  # ヘルプメッセージ
  '-h'|'--help' )
    usage
    exit 0
    ;;
  # バージョンメッセージ
  '--version' )
    echo $VERSION
    exit 0
    ;;
  # 削除されるサイズ表示
  '-n'|'--dry-run' )
    echo
    ${ECHO} "${WHITE_UNDER}Display size to be deleted.${COLOR_OFF}\n"
    echo
    showSizeMessage
    echo
    echo "🔖  For your Information"
    echo
    usage_option
    exit 0
    ;;
  # iOS DeviceSupportを削除対象に追加
  '-i' )
    DIRS="${DEVICE_SUPPORT_DIR}"
    IS_CONTAIN_ARCHIVE=false
    IS_CONTAIN_DERIVED_DIR=false
    ;;
  # Archivesを削除対象に追加
  '-A' )
    DIRS="${ARCHIVE_DIR}"
    IS_CONTAIN_DEVICE_SUPPORT=false
    IS_CONTAIN_DERIVED_DIR=false
    ;;
  # Derivedwo削除対象に追加
  '-D' )
    DIRS="${DERIVED_DATA_DIR}"
    IS_CONTAIN_DEVICE_SUPPORT=false
    IS_CONTAIN_ARCHIVE=false
    ;;
  # iとA(ちょっといけてないけど)
  '-iA' | '-Ai' )
    DIRS="${DEVICE_SUPPORT_DIR}"
    DIRS+=",${ARCHIVE_DIR}"
    IS_CONTAIN_DERIVED_DIR=false
    ;;
  # iとD(ちょっといけてないけど)
  '-iD' | '-Di' )
    DIRS="${DEVICE_SUPPORT_DIR}"
    DIRS+=",${DERIVED_DATA_DIR}"
    IS_CONTAIN_ARCHIVE=false
    ;;
  # AとD(ちょっといけてないけど)
  '-AD' | '-DA' )
    DIRS="${ARCHIVE_DIR}"
    DIRS+=",${DERIVED_DATA_DIR}"
    IS_CONTAIN_DEVICE_SUPPORT=false
    ;;
  # iとAとD(ちょっといけてないけど)
  '-iAD' | '-iDA' | '-DiA' | '-DAi' | '-AiD' | '-ADi' )
    # 全指定と同じ
    ;;
  * )
    usage
    exit 0
    ;;
  esac
done
# メイン処理
echo
${ECHO} "${WHITE_UNDER}This script will clean the cache of Xcode.${COLOR_OFF}\n"
echo
if ! $IS_CONTAIN_DERIVED_DIR ; then
  ${ECHO} %b "✏️${COLOR_GRAY} If you add ${COLOR_OFF}-D${COLOR_GRAY} option, add ${COLOR_OFF}~/Library/Developer/Xcode/DerivedData${COLOR_GRAY} to be deleted.${COLOR_OFF}\n"
fi
if ! $IS_CONTAIN_DEVICE_SUPPORT ; then
  ${ECHO} %b "✏️${COLOR_GRAY} If you add ${COLOR_OFF}-i${COLOR_GRAY} option, add ${COLOR_OFF}~/Library/Developer/Xcode/iOS DeviceSupport${COLOR_GRAY} to be deleted.${COLOR_OFF}\n"
fi
if ! $IS_CONTAIN_ARCHIVE ; then
  ${ECHO} %b "✏️${COLOR_GRAY} If you add ${COLOR_OFF}-A${COLOR_GRAY} option, add ${COLOR_OFF}~/Library/Developer/Xcode/Archives${COLOR_GRAY} to be deleted.${COLOR_OFF}\n"
fi
if $IS_CONTAIN_DEVICE_SUPPORT && $IS_CONTAIN_ARCHIVE && $IS_CONTAIN_DERIVED_DIR; then
  ${ECHO} "✏️${COLOR_GRAY} If you want to delete individually please specify option.${COLOR_OFF}\n"
  echo
  ${ECHO} "${COLOR_GRAY}$ refreshXcode [-iAD]${COLOR_OFF}\n"
fi
echo
showSizeMessage
if [ $? -eq 1 ]; then
  echo
  echo "You do not have to run this script.👌"
  echo
  exit 0
fi
readInput

echo
echo "It became very clean!🎉"
